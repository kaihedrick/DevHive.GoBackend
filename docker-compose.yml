version: '3.8'

services:
  devhive-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devhive-backend
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=devhive
      - DB_PASSWORD=devhive123
      - DB_NAME=devhive
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
      - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
      - FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
      - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
      - FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_URL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
    volumes:
      - ./static:/app/static
      - ./db:/app/db
    networks:
      - devhive-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    container_name: devhive-postgres
    environment:
      - POSTGRES_DB=devhive
      - POSTGRES_USER=devhive
      - POSTGRES_PASSWORD=devhive123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - devhive-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devhive -d devhive"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: devhive-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devhive-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  devhive-network:
    driver: bridge
