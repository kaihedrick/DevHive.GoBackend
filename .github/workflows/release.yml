name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Install dependencies
        run: |
          go mod download
          go mod verify

      - name: Skip OpenAPI code generation (not configured)
        run: |
          echo "⚠️ OpenAPI code generation skipped - API files not configured"
          echo "✅ Continuing with build process"

      - name: Run tests
        run: |
          go test -v ./...

      - name: Build for multiple platforms
        run: |
          # Create bin directory
          mkdir -p bin
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o bin/devhive-linux-amd64 ./cmd/server
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o bin/devhive-windows-amd64.exe ./cmd/server
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -o bin/devhive-darwin-amd64 ./cmd/server
          
          # Build for ARM64 (Linux)
          GOOS=linux GOARCH=arm64 go build -o bin/devhive-linux-arm64 ./cmd/server

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/devhive-linux-amd64
            bin/devhive-windows-amd64.exe
            bin/devhive-darwin-amd64
            bin/devhive-linux-arm64
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Install dependencies
        run: |
          go mod download
          go mod verify

      - name: Skip OpenAPI code generation (not configured)
        run: |
          echo "⚠️ OpenAPI code generation skipped - API files not configured"
          echo "✅ Continuing with build process"

      - name: Run tests
        run: |
          go test -v ./...

      - name: Build application
        run: |
          go build -o bin/devhive ./cmd/server

      - name: Deploy to Fly.io Production
        run: |
          flyctl deploy --remote-only --app devhive-go-backend

      - name: Verify production deployment
        run: |
          sleep 30
          curl -f https://devhive-go-backend.fly.dev/health || exit 1
          echo "✅ Production deployment verified successfully"
